<h2>Password Reset</h2>

<form id="reset-form">
  <fieldset>
    <legend>Please set a new password</legend>
    <input
      autocomplete="new-password"
      aria-labelledby="password-label"
      id="password"
      name="password"
      type="password"
    />
    <label for="password" id="password-label">New password</label>
    <input
      autocomplete="new-password"
      aria-labelledby="password-confirmation-label"
      id="password-confirmation"
      name="confirm password"
      type="password"
    />
    <label for="password-confirmation" id="password-confirmation-label">
      Please confirm your password
    </label>
    <input id="submit-reset" type="submit" />
  </fieldset>
  <div><span class="errors"></span></div>
</form>

<script defer>

  const resetForm = document.querySelector('form#reset-form');

  resetForm.addEventListener('submit', handleSubmit, false);

  async function handleSubmit(event) {
    event.preventDefault();
    clearErrors();

    const password = resetForm.querySelector('input#password').value;

    const validate =
      resetForm.querySelector('input#password-confirmation').value;

    if (password !== validate) return handleErrors('*Passwords must match');
    if (!password || !validate) return handleErrors('*Please confirm password');

    const data = { password };

    try {
      const response = await putReset(data);
      const { success } = response;
      if (!success) {
        const { message } = response;
        return handleErrors(message);
      }
      return window.location = '/';
    } catch (err) {
      handleErrors(err);
    }
  }

  function handleErrors(err) {
    const errorSpan = document.querySelector('span.errors');
    
    errorSpan.innerText = err;
    errorSpan.classList.add('active');
  }

  function clearErrors() {
    const errorSpan = document.querySelector('span.errors');

    errorSpan.innerText = '';
    errorSpan.classList.remove('active');
  }

  async function putReset(data) {
    const request = await fetch('/api/auth', {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });
    const response = await request.json();
    return response;
  }

</script>
