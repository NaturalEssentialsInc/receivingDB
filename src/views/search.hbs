<div id="search-options">
  <h2>Search</h2>
  <div class="search-row">
    <div class="search-label">By date range:</div>
    <div class="search-inputs">
      <div class="input-group">
        <input
          aria-labelledby="bydate-start-label"
          id="bydate-start"
          name="bydate-start"
          type="date"
          value="{{lastWeek}}"
          max="{{dateNowInput}}"
        />
        <label for="bydate-start" id="bydate-start-label">
          From<span class="errors"></span>
        </label>
      </div>
      <div class="input-group">
        <input
          aria-labelledby="bydate-end-label"
          id="bydate-end"
          name="bydate-end"
          type="date"
          value="{{dateNowInput}}"
          max="{{dateNowInput}}"
        />
        <label for="bydate-end" id="bydate-end-label">
          Through<span class="errors"></span>
        </label>
      </div>
      <button id="bydate-search">Search</button>
    </div>
  </div>
  <div class="search-row">
    <div class="search-label">By Purchase Order:</div>
    <div class="search-inputs one">
      <div class="input-group po-input">
        <input
          aria-labelledby="po-label"
          id="po"
          maxLength="32"
          name="po"
          type="text"
        />
        <label for="po" id="po-label">
          PO #<span class="errors"></span>
        </label>
      </div>
      <button id="po-view">Search</button>
    </div>
  </div>
  <div class="search-row">
    <div class="search-label">By Part Number:</div>
    <div class="search-inputs three">
      <div class="input-group">
        <input
          aria-labelledby="part-number-label"
          id="part-number"
          maxLength="32"
          name="part-number"
          type="text"
        />
        <label for="part-number" id="part-number-label">
          Part Number<span class="errors"></span>
        </label>
      </div>
      <div class="flex-break"></div>
      <div class="input-group">
        <input
          aria-labelledby="part-number-from-label"
          id="part-number-from"
          name="part-number-from"
          max="{{dateNowInput}}"
          type="date"
          value="{{monthsBack "6"}}"
        />
        <label for="part-number-from" id="part-number-from-label">
          From<span class="errors"></span>
        </label>
      </div>
      <div class="input-group">
        <input
          aria-labelledby="part-number-through-label"
          id="part-number-through"
          name="part-number-through"
          max="{{dateNowInput}}"
          type="date"
          value="{{dateNowInput}}"
        />
        <label for="part-number-through" id="part-number-through-label">
          Through<span class="errors"></span>
        </label>
      </div>
      <button id="part-number-search">Search</button>
    </div>
  </div>
  <div class="search-row">
    <div class="search-label">By Vendor:</div>
    <div class="search-inputs three">
      <div class="input-group">
        <input
          aria-labelledby="vendor-label"
          id="vendor"
          maxLength="64"
          name="vendor"
          type="text"
        />
        <label for="vendor" id="vendor-label">
          Vendor<span class="errors"></span>
        </label>
      </div>
      <div class="flex-break"></div>
      <div class="input-group">
        <input
          aria-labelledby="vendor-from-label"
          id="vendor-from"
          name="vendor-from"
          max="{{dateNowInput}}"
          type="date"
          value="{{monthsBack "2"}}"
        />
        <label for="vendor-from" id="vendor-from-label">
          From<span class="errors"></span>
        </label>
      </div>
      <div class="input-group">
        <input
          aria-labelledby="vendor-through-label"
          id="vendor-through"
          name="vendor-through"
          max="{{dateNowInput}}"
          type="date"
          value="{{dateNowInput}}"
        />
        <label for="vendor-through" id="vendor-through-label">
          Through<span class="errors"></span>
        </label>
      </div>
      <button id="vendor-search">Search</button>
    </div>
  </div>

</div>

<script defer>
  const searchByDate = document.querySelector('button#bydate-search');

  const searchByPo = document.querySelector('button#po-view');

  const searchByPartNo = document.querySelector('button#part-number-search');

  const searchByVendor = document.querySelector('button#vendor-search');

  searchByDate.addEventListener('click', handleSearchByDate, false);

  searchByPo.addEventListener('click', handleSearchByPo, false);

  searchByPartNo.addEventListener('click', handleSearchByPartNo, false);

  searchByVendor.addEventListener('click', handleSearchByVendor, false);

  function handleSearchByDate() {
    clearErrs();
    const startElem = document.querySelector('input#bydate-start');
    const endElem = document.querySelector('input#bydate-end');
    const startDate = parseDateInput(startElem);
    const endDate = parseDateInput(endElem);
    if (startDate > endDate) {
      setInputError(startElem, '*Invalid range');
      return setInputError(endElem, '*Invalid range');
    }
    const today = new Date();
    today.setHours(0, 0, 0 ,0); 
    const startDay = daysBetween(today, startDate); 
    const endDay = daysBetween(today, endDate);
    window.location = `/browse?start=${startDay - 1}&end=${endDay - 1}`;
  }

  function handleSearchByPo() {
    clearErrs();
    const inputElem = document.querySelector('input#po');
    const inputVal = inputElem.value;
    if (!inputVal || !inputVal.length) {
      return setInputError(inputElem, '*Required');
    }
    window.location = `/view/po/${inputVal.trim()}`;
  }

  function handleSearchByPartNo() {
    clearErrs();
    const startElem = document.querySelector('input#part-number-from');
    const endElem = document.querySelector('input#part-number-through');
    const inputElem = document.querySelector('input#part-number');
    const startDate = parseDateInput(startElem);
    const endDate = parseDateInput(endElem);
    if (startDate > endDate) {
      setInputError(startElem, '*Invalid range');
      return setInputError(endElem, '*Invalid range');
    }
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const startDay = daysBetween(today, startDate);
    const endDay = daysBetween(today, endDate);
    const { value } = inputElem;
    if (!value) return setInputError(inputElem, '*Required');
    const partNumber = encodeURI(value);
    return window.location =`/browse?start=${
      startDay - 1
    }&end=${
      endDay - 1
    }&filter=nepNumber&value=${
      partNumber.trim()
    }`;
  }

  function handleSearchByVendor() {
    clearErrs();
    const startElem = document.querySelector('input#vendor-from');
    const endElem = document.querySelector('input#vendor-through');
    const inputElem = document.querySelector('input#vendor');
    const startDate = parseDateInput(startElem);
    const endDate = parseDateInput(endElem);
    if (startDate > endDate) {
      setInputError(startElem, '*Invalid range');
      return setInputError(endElem, '*Invalid range');
    }
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const startDay = daysBetween(today, startDate);
    const endDay = daysBetween(today, endDate);
    const { value } = inputElem;
    if (!value) return setInputError(inputElem, '*Required');
    const vendor = encodeURI(value);
    return window.location =`/browse?start=${
      startDay - 1
    }&end=${
      endDay - 1
    }&filter=vendor&value=${
      vendor.trim()
    }`;
  }


  function setInputError(input, msg) {
    const inputGroup = input.closest('div.input-group');
    const errorSpan = inputGroup.querySelector('span.errors');
    errorSpan.innerText = msg;
    errorSpan.classList.add('active');
  }

  function clearErrs() {
    const errorSpans = Array.from(document.querySelectorAll('span.errors'));
    errorSpans.forEach(span => {
      span.classList.remove('active');
      span.innerText = '';
    });
  }

  function parseDateInput(inputElem) {
    const { value } = inputElem;
    if (!value) return setInputError(inputElem, '*Date required');
    const date = new Date(value);
    date.setHours(0, 0, 0, 0);
    return date;
  }

  function daysBetween(date1, date2) {
    const timeDifference = date1.getTime() - date2.getTime();
    return Math.round(timeDifference / (24 * 60 * 60 * 1_000));
  }

</script>
